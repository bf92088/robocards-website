{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","robots.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","name","username","email","CardList","robots","cardArray","map","user","i","id","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uOAeeA,EAbF,SAACC,GACV,OACI,sBAAKC,UAAW,sDAAhB,UACI,qBAAKC,IAAI,SAASC,IAAK,6CACvB,gCACI,6BAAKH,EAAMI,OACX,4BAAIJ,EAAMK,WACV,4BAAIL,EAAMM,eCKXC,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAQ,cAAC,EAAD,CAAcC,GAAIL,EAAOI,GAAGC,GAAIT,KAAMI,EAAOI,GAAGR,KAAMC,SAAUG,EAAOI,GAAGP,SAAUC,MAAOE,EAAOI,GAAGN,OAA1FM,MAEvB,OACI,8BACKH,KCQEK,EAdG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKf,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVgB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCIPI,EAVA,SAACpB,GACZ,OACI,qBAAKqB,MAAS,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACCxB,EAAMyB,YCkBAC,E,kDAtBX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IACD2B,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAI9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAK/B,MAAMyB,a,GAjBCQ,aCFdzB,EAAS,CAClB,CACIK,GAAI,EACJT,KAAM,aACNC,SAAU,SACVC,MAAO,oBAEX,CACIO,GAAI,EACJT,KAAM,cACNC,SAAU,SACVC,MAAO,oBAEX,CACIO,GAAI,EACJT,KAAM,aACNC,SAAU,SACVC,MAAO,oBAEX,CACIO,GAAI,EACJT,KAAM,aACNC,SAAU,UACVC,MAAO,qBAEX,CACIO,GAAI,EACJT,KAAM,cACNC,SAAU,WACVC,MAAO,sBAEX,CACIO,GAAI,EACJT,KAAM,cACNC,SAAU,SACVC,MAAO,oBAEX,CACIO,GAAI,EACJT,KAAM,eACNC,SAAU,YACVC,MAAO,uBAEX,CACIO,GAAI,EACJT,KAAM,cACNC,SAAU,SACVC,MAAO,qBCOA4B,G,gEA3CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAf1C,EAAKX,MAAQ,CACTnB,OAAQA,EACRO,YAAa,IAJP,E,0CAoBd,WAAU,IAAD,EAC2BgB,KAAKJ,MAA7BnB,EADH,EACGA,OAAQO,EADX,EACWA,YACVwB,EAAiB/B,EAAOgC,QAAO,SAAAhC,GACjC,OAAOA,EAAOJ,KAAKqC,cAAcC,SAAS3B,EAAY0B,kBAE1D,OAAsB,IAAlBjC,EAAOmC,OACA,yCAGX,sBAAK1C,UAAU,KAAf,UACI,oBAAKA,UAAU,KAAf,uBACA,cAAC,EAAD,CAAWe,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACJ,cAAC,EAAD,CAAU3B,OAAQ+B,e,GAnCZN,cCEHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASC,OAIP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.51e1929a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n    return (\n        <div className ='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={'https://robohash.org/${props.id}?200x200'} />\n            <div>\n                <h2>{props.name}</h2>\n                <p>{props.username}</p>\n                <p>{props.email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    const cardArray = robots.map((user, i) => {\n        return (<Card key={i} id={robots[i].id} name={robots[i].name} username={robots[i].username} email={robots[i].email}/>);\n    })\n    return (\n        <div>\n            {cardArray}\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input \n            className='pa3 ba b--green bg-lightest-blue' \n            type='search' \n            placeholder='search robots'\n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\n\nexport default SearchBox;","import React from 'react';\n\n\n\nconst Scroll = (props) => {\n    return (\n        <div style = {{ overflow: 'scroll', border: '5px solid black', height: '500px'}}>\n        {props.children}\n        </div>\n    );\n};\n\n\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n\n    }\n\n    render () {\n        if (this.state.hasError) {\n            return <h1>Oooops. There is an error</h1>\n        }\n        return this.props.children\n    }\n\n\n}\n\nexport default ErrorBoundry;","export const robots = [\n    {\n        id: 1,\n        name: 'John Smith',\n        username: 'jsmith',\n        email: 'jsmith@gmail.com'\n    },\n    {\n        id: 2,\n        name: 'James Davis',\n        username: 'jdavis',\n        email: 'jdavis@gmail.com'\n    },\n    {\n        id: 3,\n        name: 'Mike Jones',\n        username: 'mjones',\n        email: 'mjones@gmail.com'\n    },\n    {\n        id: 4,\n        name: 'Joe Schmoe',\n        username: 'jschmoe',\n        email: 'jschmoe@gmail.com'\n    },\n    {\n        id: 5,\n        name: 'Don Johnson',\n        username: 'djohnson',\n        email: 'djohnson@gmail.com'\n    },\n    {\n        id: 6,\n        name: 'David Clark',\n        username: 'dclark',\n        email: 'dclark@gmail.com'\n    },\n    {\n        id: 7,\n        name: 'Tom Peterson',\n        username: 'tpeterson',\n        email: 'tpeterson@gmail.com'\n    },\n    {\n        id: 8,\n        name: 'Jason Henry',\n        username: 'jhenry',\n        email: 'jhenry@gmail.com'\n    }\n];","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport { robots } from '../robots';\nimport { render } from '@testing-library/react';\nimport './App.css';\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: robots,\n            searchfield: ''\n        }\n    }\n\n //   componentDidMount() {\n //       fetch('https://jsonplaceholder.typicode.com/users')\n //       .then(response => response.json())\n //       .then(users =>  this.setState({ robots: users}));\n //   }\n\n\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robots =>{\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        if (robots.length === 0) {\n            return <h1>Loading</h1>\n        } else {\n    return (\n        <div className='tc'>\n            <h1  className='f1'>RoboCards</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n                <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n                </ErrorBoundry>\n            </Scroll>\n        </div>\n    );\n    }\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  // <App />\n  // </React.StrictMode>\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}